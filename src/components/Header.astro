---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
---

<style>
  .btn {
    font-size: 0.8rem;
  }

  .btn:hover {
    cursor: pointer;
  }
  .btn-container {
    margin-inline: 2rem;
  }
</style>
<header class="wrapper">
  <nav>
    <h2 class="highlight">
      <a href="/" class="no-decor site-title">{SITE_TITLE}</a>
    </h2>
    <p>
      My name is Jordan, welcome to my little plot on the internet. This is my
      blog where I write technical posts for web people. I'll also share some
      random thoughts as journal entries.
    </p>
    <div class="row">
      <div class="internal-links">
        <HeaderLink href="/" id="blog">blog</HeaderLink>
        <HeaderLink href="/journal" id="journal">journal</HeaderLink>
        <HeaderLink href="/rss.xml">
          rss
          <svg
            xmlns="http://www.w3.org/2000/svg"
            id="RSSicon"
            viewBox="0 0 8 8"
            width="15"
            height="15"
          >
            <rect class="button" width="8" height="8" rx="1.5"></rect>
            <circle class="symbol" cx="2" cy="6" r="1"></circle>
            <path
              class="symbol"
              d="m 1,4 a 3,3 0 0 1 3,3 h 1 a 4,4 0 0 0 -4,-4 z"></path>
            <path
              class="symbol"
              d="m 1,2 a 5,5 0 0 1 5,5 h 1 a 6,6 0 0 0 -6,-6 z"></path>
          </svg>
        </HeaderLink>
      </div>
      <div>
        <a href="https://jordanbooker.dev" target="_blank"
          >portfolio
          <svg
            xmlns="http://www.w3.org/2000/svg"
            height=".65em"
            viewBox="0 0 512 512"
            class="symbol-invert"
            ><!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
            <path
              d="M320 0c-17.7 0-32 14.3-32 32s14.3 32 32 32h82.7L201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L448 109.3V192c0 17.7 14.3 32 32 32s32-14.3 32-32V32c0-17.7-14.3-32-32-32H320zM80 32C35.8 32 0 67.8 0 112V432c0 44.2 35.8 80 80 80H400c44.2 0 80-35.8 80-80V320c0-17.7-14.3-32-32-32s-32 14.3-32 32V432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H192c17.7 0 32-14.3 32-32s-14.3-32-32-32H80z"
            ></path>
          </svg>
        </a>
      </div>
      <div class="btn-container">
        <button class="btn" id="color-mode">☼ Light</button>
      </div>
    </div>
  </nav>
</header>
<script>
  //determines if the user has a set theme
  function detectColorScheme() {
    let theme = 'light';
    const storedTheme = localStorage.getItem('theme');
    //local storage is used to override OS theme settings
    if (storedTheme) {
      theme = storedTheme;
    } else {
      if (!window.matchMedia) {
        //matchMedia method not supported
        return false;
      } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        //OS theme setting detected as dark
        theme = 'dark';
      }
    }
    localStorage.setItem('theme', theme);
    let root = document.querySelector(':root');
    if (root) {
      root.classList.add(`${theme}-theme`);
      root.setAttribute('data-theme', theme);
    }
    if (theme == 'dark') {
      let colorModeToggle = document.getElementById('color-mode');
      if (colorModeToggle) {
        colorModeToggle.innerText = '☾ Dark';
      }
    }
  }
  detectColorScheme();

  let colorModeToggle = document.getElementById('color-mode');
  if (colorModeToggle) {
    colorModeToggle.addEventListener('click', (_event) => {
      let root = document.querySelector(':root');
      if (root && colorModeToggle) {
        if (colorModeToggle.innerText === '☾ Dark') {
          const newTheme = 'light';
          colorModeToggle.innerText = '☼ Light';
          root.classList.remove('dark-theme');
          root.classList.add('light-theme');
          root.setAttribute('data-theme', newTheme);
          localStorage.setItem('theme', newTheme);
        } else {
          const newTheme = 'dark';
          colorModeToggle.innerText = '☾ Dark';
          root.classList.remove('light-theme');
          root.classList.add('dark-theme');
          root.setAttribute('data-theme', newTheme);
          localStorage.setItem('theme', newTheme);
        }
      }
    });
  }
</script>
